name: Deploy

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      
env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  
jobs:
  deploy:
      name: Deploy app
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2

        - name: Set env
          run: temp=${{ inputs.ref }}; echo "RELEASE_VERSION=${temp#refs/*/}" >> $GITHUB_ENV
      
        - name: Login to GitHub Container Registry
          uses: docker/login-action@v2
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
            
        - name: Pull docker image
          run: /usr/bin/docker pull ghcr.io/vincentvibe3/emergencyfood:${{ env.RELEASE_VERSION }}
        
        - uses: superfly/flyctl-actions/setup-flyctl@master
        - run: flyctl deploy -i ghcr.io/vincentvibe3/emergencyfood:${{ env.RELEASE_VERSION }}
        
        - name: Deploy to azure
          run: |
              PAYLOAD=$(curl '${{ secrets.SUPABASE_ENDPOINT }}?label=eq.azure&select=ip' \
                -H "apikey: ${{ secrets.SUPABASE_KEY }}" \
                -H "Authorization: Bearer  ${{ secrets.SUPABASE_KEY }}" \
                -H "Range: 0-9") \
              && ADDRESS=$(echo $PAYLOAD | python3 -c 'import json, sys; print(json.load(sys.stdin)[0]["ip"]);') \
              && curl -d "label=bot&version=${{ env.RELEASE_VERSION }}&token=${{ secrets.AGENT_TOKEN }}" $ADDRESS/version

        - name: Status webhook
          uses: sarisia/actions-status-discord@v1
          if: always()
          with:
            webhook: ${{ secrets.DISCORD_WEBHOOK }}
            title: "Deploy workflow"
            username: GitHub Actions
