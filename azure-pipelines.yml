# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

name: Build $(SourceBranchName)_$(date:yyyyMMdd)$(rev:.r)

trigger:
  tags:
    include:
      - v.*

pr: none

jobs:

  - job: Build_Release

    pool:
      vmImage: 'ubuntu-18.04'

    displayName: Build and Release

    steps:
    - task: Gradle@2
      displayName: Gradle Build
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'build'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/build/libs/*'
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - task: GitHubRelease@1
      displayName: Publish on Github Releases
      inputs:
        gitHubConnection: 'github.com_Vincentvibe3'
        repositoryName: 'Vincentvibe3/emergencyfood-v2'
        action: 'create'
        title: '$(Build.SourceBranchName)'
        target: '$(Build.SourceVersion)'
        tagSource: 'gitTag'
        assets: '$(Build.ArtifactStagingDirectory)/build/libs/*'
        changeLogCompareToRelease: 'lastFullRelease'
        changeLogType: 'commitBased'

  - deployment: VMDeploy
    pool:
      vmImage: 'ubuntu-18.04'
    dependsOn: Build_Release
    displayName: Deploy Stable
    environment:
      name:  emergencyfood
      resourceType: VirtualMachine
      tags: production
    strategy:
      runOnce:
        deploy:
          steps:
            - task: Bash@3
              displayName: Clean Old Binaries
              inputs:
                targetType: 'inline'
                script: |
                  echo Stopping old instance
                  sudo systemctl stop emergencyfood.service
                  echo Removing old jar
                  rm -r ~/current
                  mkdir ~/current

            - task: DownloadGitHubRelease@0
              displayName: Download Latest Release
              inputs:
                connection: 'github.com_Vincentvibe3'
                userRepository: 'Vincentvibe3/emergencyfood-v2'
                defaultVersionType: 'latest'
                itemPattern: '*.jar'
                downloadPath: $(System.ArtifactsDirectory)

            - task: Bash@3
              displayName: Move Downloaded Artifact
              inputs:
                targetType: 'inline'
                script: |
                  mv $(System.ArtifactsDirectory)/* ~/current
                  ls ~/current

            - task: Bash@3
              displayName: Start Bot Service
              inputs:
                targetType: 'inline'
                script: |
                  echo Starting bot service
                  sudo systemctl start emergencyfood.service
                  sleep 2
                  systemctl is-active emergencyfood.service