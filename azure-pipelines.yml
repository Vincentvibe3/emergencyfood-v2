
# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

name: Build $(SourceBranchName)_$(date:yyyyMMdd)$(rev:.r)

trigger:
  tags:
    include:
      - v.*

pr: none

jobs:

 - job: Build_Release

   pool:
     vmImage: 'ubuntu-18.04'

   displayName: Build and Release

   steps:
   - script: wget https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.1%2B12/OpenJDK17U-jdk_x64_linux_hotspot_17.0.1_12.tar.gz
    # Java tool installer
    # Acquire a specific version of Java from a user-supplied Azure blob or the tool cache and sets JAVA_HOME
   - task: JavaToolInstaller@0
     inputs:
       versionSpec: '17'
       jdkArchitectureOption: x64 # Options: x64, x86
       jdkSourceOption: LocalDirectory # Options: AzureStorage, LocalDirectory
       jdkFile: ./OpenJDK17U-jdk_x64_linux_hotspot_17.0.1_12.tar.gz # Required when jdkSourceOption == LocalDirectory
       jdkDestinationDirectory: $(agent.toolsDirectory)/jdk17'

   - task: Gradle@2
     displayName: Gradle Build
     inputs:
       workingDirectory: ''
       gradleWrapperFile: 'gradlew'
       gradleOptions: '-Xmx3072m'
       javaHomeOption: 'JDKVersion'
       jdkVersionOption: '17'
       jdkArchitectureOption: 'x64'
       publishJUnitResults: true
       testResultsFiles: '**/TEST-*.xml'
       tasks: 'build'

   - task: CopyFiles@2
     displayName: 'Copy Files to artifact staging directory'
     inputs:
       SourceFolder: '$(System.DefaultWorkingDirectory)'
       Contents: '**/build/libs/*'
       TargetFolder: $(Build.ArtifactStagingDirectory)

   - task: GitHubRelease@1
     displayName: Publish on Github Releases
     inputs:
       gitHubConnection: 'github.com_Vincentvibe3'
       repositoryName: 'Vincentvibe3/emergencyfood-v2'
       action: 'create'
       title: '$(Build.SourceBranchName)'
       target: '$(Build.SourceVersion)'
       tagSource: 'gitTag'
       assets: '$(Build.ArtifactStagingDirectory)/build/libs/*'
       changeLogCompareToRelease: 'lastFullRelease'
       changeLogType: 'commitBased'

 - job: Deployment
 
   pool:
    vmImage: 'ubuntu-18.04'

   displayName: Deploy to VM 
    
   dependsOn: Build_Release

   steps:
    - checkout: none
    - task: SSH@0
      displayName: Kill Old Instance
      inputs:
        sshEndpoint: 'emergencyfood-ssh'
        runOptions: 'inline'
        inline: |
          sudo systemctl stop emergencyfood.service
        readyTimeout: '20000'

    - task: DownloadGitHubRelease@0
      displayName: Download Latest Release
      inputs:
        connection: 'github.com_Vincentvibe3'
        userRepository: 'Vincentvibe3/emergencyfood-v2'
        defaultVersionType: 'latest'
        itemPattern: '*.jar'
        downloadPath: $(System.ArtifactsDirectory)

    - task: SSH@0
      displayName: Clean bot directory
      inputs:
        sshEndpoint: 'emergencyfood-ssh'
        runOptions: 'inline'
        inline: |
          rm ~/current/*.jar
        readyTimeout: '20000'

    - task: CopyFilesOverSSH@0
      displayName: Copy Binary
      inputs:
        sshEndpoint: 'emergencyfood-ssh'
        sourceFolder: '$(System.ArtifactsDirectory)'
        contents: '*.jar'
        cleanTargetFolder: false
        targetFolder: '~/current'
        readyTimeout: '20000'

    - task: SSH@0
      displayName: Start New Instance
      inputs:
        sshEndpoint: 'emergencyfood-ssh'
        runOptions: 'inline'
        inline: |
          sudo systemctl start emergencyfood.service
          sleep 3
          systemctl is-active emergencyfood.service
        readyTimeout: '20000'

 - job: Webhook_Status

   pool: server

   displayName: Build and Release

   condition: always()
  
   steps:
   - task: InvokeRESTAPI@1
     inputs:
       connectionType: 'connectedServiceName'
       serviceConnection: 'Discord Webhook'
       method: 'POST'
       headers: |
         {
         "Content-Type":"application/json", 
         }
       body: |
         {
         "embeds":[{
         "title":"Build Status)",
         "type":"rich",
         "description":"$(Agent.JobStatus)",
         "color":15548997
         }]
         }
       waitForCompletion: 'false'